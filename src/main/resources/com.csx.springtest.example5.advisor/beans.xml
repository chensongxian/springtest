<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<!--普通方法匹配切面-->
    <bean id="waiterTarget" class="com.csx.springtest.example5.advisor.Waiter"/>
    <bean id="sellerTarget" class="com.csx.springtest.example5.advisor.Seller"/>
    <bean id="greetingAdvice" class="com.csx.springtest.example5.advisor.GreetingBeforeAdvice"/>
    <bean id="greetingAdvisor" class="com.csx.springtest.example5.advisor.GreetingAdvisor" p:advice-ref="greetingAdvice"/>

    <bean id="parent" abstract="true" class="org.springframework.aop.framework.ProxyFactoryBean"
            p:interceptorNames="greetingAdvisor" p:proxyTargetClass="true">
    </bean>

    <bean id="waiter" parent="parent" p:target-ref="waiterTarget"/>
    <bean id="seller" parent="parent" p:target-ref="sellerTarget"/>


    <!-- 正则表达式方法名匹配切面 -->
    <bean id="regexpAdvisor"
          class="org.springframework.aop.support.RegexpMethodPointcutAdvisor"
          p:advice-ref="greetingAdvice">
        <property name="patterns">
            <list>
                <value>.*greet.*</value>
            </list>
        </property>
    </bean>
    <bean id="waiter1" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:interceptorNames="regexpAdvisor" p:target-ref="waiterTarget"
          p:proxyTargetClass="true" />

    <!-- 动态切面 -->
    <bean id="dynamicAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
        <property name="pointcut">
            <bean class="com.csx.springtest.example5.advisor.GreetingDynamicPointcut" />
        </property>
        <property name="advice">
            <bean class="com.csx.springtest.example5.advisor.GreetingBeforeAdvice" />
        </property>
    </bean>


    <bean id="waiter2" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:interceptorNames="dynamicAdvisor"
          p:target-ref="waiterTarget"
          p:proxyTargetClass="true" />

    <!-- 控制流程切面 -->
    <bean id="controlFlowPointcut" class="org.springframework.aop.support.ControlFlowPointcut">
        <constructor-arg type="java.lang.Class"
                         value="com.csx.springtest.example5.advisor.WaiterDelegate" />
        <constructor-arg type="java.lang.String" value="service" />
    </bean>

    <bean id="controlFlowAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor"
          p:pointcut-ref="controlFlowPointcut" p:advice-ref="greetingAdvice" />
    <bean id="waiter3" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:interceptorNames="controlFlowAdvisor" p:target-ref="waiterTarget"
          p:proxyTargetClass="true" />

    <!-- 复合切点切面 -->
    <bean id="gcp" class="com.csx.springtest.example5.advisor.GreetingComposablePointcut" />
    <bean id="composableAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor"
          p:pointcut="#{gcp.intersectionPointcut}" p:advice-ref="greetingAdvice" />
    <bean id="waiter4" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:interceptorNames="composableAdvisor" p:target-ref="waiterTarget"
          p:proxyTargetClass="true" />

</beans>